def un = project.hasProperty('kintMavenUser') ? project.kintMavenUser : null
def pw = project.hasProperty('kintMavenPassword') ? project.kintMavenPassword : null

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

version "3.3.12"
group "com.k_int.grails"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    
    provided 'org.grails.plugins:spring-security-core:3.2.0'
    compile "org.postgresql:postgresql:42.2.4"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

publishing {
  publications {
      plugin(MavenPublication) {
          groupId "${group}"
          pom.withXml {
              def pomNode = asNode()
              pomNode.dependencyManagement.replaceNode {}

              // simply remove dependencies without a version
              // version-less dependencies are handled with dependencyManagement
              // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
              pomNode.dependencies.dependency.findAll {
                  it.version.text().isEmpty()
              }.each {
                  it.replaceNode {}
              }
          }
          from components.java
      }
  }
  
  if (un) {
    System.out.println("Found username for K-Int Maven repo '${un}'")
    repositories {
      maven {
        name "KIntPublic"
        // url "http://maven.k-int.com/content/repositories/private/"
        url "http://maven.k-int.com/content/repositories/releases/"
        credentials {
          username un
          password pw
        }
      }
    }
  }
}
